name: Deploy to Azure

on:
  workflow_dispatch:  # Allow manual triggering from GitHub UI
    inputs:
      bypassTest:
        description: "Set to true to skip build and test stages"
        required: false
        default: "true"  # Default to 'true'

  push:
    branches:
      - main  # Only trigger on push to the 'main' branch

jobs:
  build:
    if: ${{ github.event.inputs.bypassTest != 'true' && (github.event_name == 'workflow_dispatch' || github.ref_name == 'main') }}
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up Node.js version
        uses: actions/setup-node@v3
        with:
          node-version: '18.x'

      - name: Install yarn
        run: npm install -g yarn

      - name: Build application
        run: |
          yarn install
          yarn build
        env:
          SENTRY_AUTH_TOKEN: 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

  test:
    if: ${{ github.event.inputs.bypassTest != 'true' && (github.event_name == 'workflow_dispatch' || github.ref_name == 'main') }}
    runs-on: ubuntu-latest
    needs: build  # Ensure the build job completes successfully

    steps:
      - uses: actions/checkout@v4

      - name: Set up Node.js version
        uses: actions/setup-node@v3
        with:
          node-version: '18.x'

      - name: Install Cypress
        run: npm install cypress --save-dev --legacy-peer-deps

      - name: Start Application
        run: yarn dev &  # Run the app in the background

      - name: Manual Polling - Wait for App to be Ready
        run: |
          echo "Waiting 30 seconds for the app to start..."
          sleep 30
          echo "Proceeding to the next step..."

      - name: Run Cypress Tests
        run: npx cypress run --config baseUrl=http://localhost:3000

      - name: Zip artifact for deployment
        run: (cd ./.next/standalone && zip -r ../../release.zip .)

      - name: Upload artifact for deployment
        uses: actions/upload-artifact@v3
        with:
          name: node-app
          path: release.zip

  deploy:
    if: ${{ (github.event.inputs.bypassTest == 'true') || (github.event_name == 'workflow_dispatch' || github.ref_name == 'main') }}
    runs-on: ubuntu-latest
    needs: test  # Ensure the test job completes successfully unless bypassed
    environment:
      name: 'Production'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}
    permissions:
      id-token: write  # Required for JWT authentication

    steps:
      - uses: actions/checkout@v4

      - name: Download artifact from test job
        uses: actions/download-artifact@v3
        with:
          name: node-app

      - name: Unzip artifact for deployment
        run: unzip release.zip

      - name: Login to Azure
        uses: azure/login@v1
        with:
          client-id: ${{ secrets.AZUREAPPSERVICE_CLIENTID }}
          tenant-id: ${{ secrets.AZUREAPPSERVICE_TENANTID }}
          subscription-id: ${{ secrets.AZUREAPPSERVICE_SUBSCRIPTIONID }}

      - name: Upload static files to Azure Blob Storage
        run: |
          az storage blob sync -c 'nimblebee-front-static' --account-name nimblebeefrontstorage \
          --account-key ${{ secrets.AZURE_STORAGE_ACCOUNT_KEY }} -s './.next/static' -d '_next/static'
          az storage blob sync -c 'nimblebee-front-static' --account-name nimblebeefrontstorage \
          --account-key ${{ secrets.AZURE_STORAGE_ACCOUNT_KEY }} -s './public' -d 'public'
        continue-on-error: true

      - name: Purge Azure CDN endpoint
        run: |
          az cdn endpoint purge --content-paths '/*' --profile-name nimblebee-front-cdn \
          --name nimblebee-front-cdn --resource-group nimblebee-front_group
        continue-on-error: true

      - name: Deploy to Azure Web App
        id: deploy-to-webapp
        uses: azure/webapps-deploy@v2
        with:
          app-name: 'nimblebee-front'
          slot-name: 'Production'
          package: .
